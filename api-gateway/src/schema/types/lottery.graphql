type LotteryData {
  id: String
  name: String
  image_url: String
  price: Int
  max_bonus: Int
  start_sell: Date
  stop_sell: Date
  last_redeem: Date
  max_issue: Int
  max_top: Int
  sales_rate: String
  unredeemed: Int
}

type LotteryItem {
  id: Int
  number: String
  revoked: Boolean
  createdAt: Date
  exportedAt: Date
  trusteeId: Int
  lotteryDataId: String
  storeId: String
  serial: String
  importRate: Int
  exportRate: Int
  deviceId: ID
  exporter: ID
}

type Query {
  lotteryDatas(limit: Int, skip: Int, offset: Int, order: String): [LotteryData]
  lotteryData(id: String!): LotteryData
}

type Mutation {
  newLotteryItem(input: LotteryItemInput): LotteryItem
  exportLotteryItem(id: ID!, input: exportLotteryItemInput): LotteryItem
}

input newLotteryItemInput {
  number: String!
  importRate: Int!
  trusteeId: Int!
  lotteryDataId: String!
  storeId: String!
  serial: String!
  deviceId: ID!
}

input exportLotteryItemInput {
  exportRate: Int!
  exporter: ID!
}
